// <auto-generated/>
#pragma warning disable
#nullable enable

using System;

using SR  = System.Reflection;
using SLE = System.Linq.Expressions;
using SCG = System.Collections.Generic;

namespace MyAspectGenerator
{
	using AspectGenerator = AspectGenerator;

	static partial class Interceptors
	{
		static SR.MethodInfo GetMethodInfo(SLE.Expression expr)
		{
			return expr switch
			{
				SLE.MethodCallExpression mc => mc.Method,
				_                           => throw new InvalidOperationException()
			};
		}

		static SR.MethodInfo MethodOf<T>(SLE.Expression<Func<T>> func) => GetMethodInfo(func.Body);
		static SR.MethodInfo MethodOf   (SLE.Expression<Action>  func) => GetMethodInfo(func.Body);

		static SR. MemberInfo                 AllEventsMethod_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).AllEventsMethod());
		static SCG.Dictionary<string,object?> AllEventsMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.AllEventsMethod().
		/// </summary>
		//
		// Intercepts AllEventsMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 165, character: 4)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static void AllEventsMethod_Interceptor(this AspectGenerator.Tests.UnitTests __this__)
		{
			// Aspects.AllEventsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<AspectGenerator.Void>
			{
				MemberInfo      = AllEventsMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.AllEventsAttribute),
				AspectArguments = AllEventsMethod_Interceptor_AspectArguments_0,
			};

			__info__0.InterceptType = AspectGenerator.InterceptType.OnInit;
			__info__0 = Aspects.AllEventsAttribute.OnInit(__info__0);

			using (Aspects.AllEventsAttribute.OnUsing(__info__0))
			{
				try
				{
					__info__0.InterceptType = AspectGenerator.InterceptType.OnBeforeCall;
					Aspects.AllEventsAttribute.OnBeforeCall(__info__0);

					if (__info__0.InterceptResult != AspectGenerator.InterceptResult.Return)
					{
						__this__.AllEventsMethod();

						__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
						Aspects.AllEventsAttribute.OnAfterCall(__info__0);
					}
				}
				catch (Exception __ex__)
				{
					__info__0.Exception       = __ex__;
					__info__0.InterceptResult = AspectGenerator.InterceptResult.ReThrow;
					__info__0.InterceptType   = AspectGenerator.InterceptType.OnCatch;

					Aspects.AllEventsAttribute.OnCatch(__info__0);

					if (__info__0.InterceptResult == AspectGenerator.InterceptResult.ReThrow)
						throw;
				}
				finally
				{
					__info__0.InterceptType = AspectGenerator.InterceptType.OnFinally;
					Aspects.AllEventsAttribute.OnFinally(__info__0);
				}
			}
		}

		static SR. MemberInfo                 AllEventsMethodAsync_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).AllEventsMethodAsync());
		static SCG.Dictionary<string,object?> AllEventsMethodAsync_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.AllEventsMethodAsync().
		/// </summary>
		//
		// Intercepts AllEventsMethodAsync().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 191, character: 10)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static async System.Threading.Tasks.Task AllEventsMethodAsync_Interceptor(this AspectGenerator.Tests.UnitTests __this__)
		{
			// Aspects.AllEventsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<AspectGenerator.Void>
			{
				MemberInfo      = AllEventsMethodAsync_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.AllEventsAttribute),
				AspectArguments = AllEventsMethodAsync_Interceptor_AspectArguments_0,
			};

			__info__0.InterceptType = AspectGenerator.InterceptType.OnInit;
			__info__0 = Aspects.AllEventsAttribute.OnInit(__info__0);

			await using (Aspects.AllEventsAttribute.OnUsingAsync(__info__0))
			{
				try
				{
					__info__0.InterceptType = AspectGenerator.InterceptType.OnBeforeCall;
					await Aspects.AllEventsAttribute.OnBeforeCallAsync(__info__0);

					if (__info__0.InterceptResult != AspectGenerator.InterceptResult.Return)
					{
						__this__.AllEventsMethodAsync();

						__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
						await Aspects.AllEventsAttribute.OnAfterCallAsync(__info__0);
					}
				}
				catch (Exception __ex__)
				{
					__info__0.Exception       = __ex__;
					__info__0.InterceptResult = AspectGenerator.InterceptResult.ReThrow;
					__info__0.InterceptType   = AspectGenerator.InterceptType.OnCatch;

					await Aspects.AllEventsAttribute.OnCatchAsync(__info__0);

					if (__info__0.InterceptResult == AspectGenerator.InterceptResult.ReThrow)
						throw;
				}
				finally
				{
					__info__0.InterceptType = AspectGenerator.InterceptType.OnFinally;
					await Aspects.AllEventsAttribute.OnFinallyAsync(__info__0);
				}
			}
		}

		static SR. MemberInfo                 AllEventsMethodAsync2_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).AllEventsMethodAsync2());
		static SCG.Dictionary<string,object?> AllEventsMethodAsync2_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.AllEventsMethodAsync2().
		/// </summary>
		//
		// Intercepts AllEventsMethodAsync2().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 217, character: 18)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static async System.Threading.Tasks.Task<int> AllEventsMethodAsync2_Interceptor(this AspectGenerator.Tests.UnitTests __this__)
		{
			// Aspects.AllEventsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = AllEventsMethodAsync2_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.AllEventsAttribute),
				AspectArguments = AllEventsMethodAsync2_Interceptor_AspectArguments_0,
			};

			__info__0.InterceptType = AspectGenerator.InterceptType.OnInit;
			__info__0 = Aspects.AllEventsAttribute.OnInit(__info__0);

			await using (Aspects.AllEventsAttribute.OnUsingAsync(__info__0))
			{
				try
				{
					__info__0.InterceptType = AspectGenerator.InterceptType.OnBeforeCall;
					await Aspects.AllEventsAttribute.OnBeforeCallAsync(__info__0);

					if (__info__0.InterceptResult != AspectGenerator.InterceptResult.Return)
					{
						__info__0.ReturnValue = await __this__.AllEventsMethodAsync2();

						__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
						await Aspects.AllEventsAttribute.OnAfterCallAsync(__info__0);
					}
				}
				catch (Exception __ex__)
				{
					__info__0.Exception       = __ex__;
					__info__0.InterceptResult = AspectGenerator.InterceptResult.ReThrow;
					__info__0.InterceptType   = AspectGenerator.InterceptType.OnCatch;

					await Aspects.AllEventsAttribute.OnCatchAsync(__info__0);

					if (__info__0.InterceptResult == AspectGenerator.InterceptResult.ReThrow)
						throw;
				}
				finally
				{
					__info__0.InterceptType = AspectGenerator.InterceptType.OnFinally;
					await Aspects.AllEventsAttribute.OnFinallyAsync(__info__0);
				}
			}

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ArgsMethod_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).ArgsMethod());
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_0 = new()
		{
			["Arg1"] = "1",
			["Arg2"] = 2,
			["Arg3"] = new int[] { 1, 2, 3 },
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_1 = new()
		{
			["Arg3"] = new int[] { 2 },
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_2 = new()
		{
			["Arg3"] = new int[0],
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_3 = new()
		{
			["Arg1"] = "xyz",
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_4 = new()
		{
			["Arg4"] = 'w',
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_5 = new()
		{
			["Arg5"] = null,
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_6 = new()
		{
			["Arg5"] = typeof(int),
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_7 = new()
		{
			["Arg5"] = typeof(System.Collections.Generic.List<>),
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_8 = new()
		{
			["Arg5"] = typeof(System.Collections.Generic.List<System.DateTime>),
		};
		static SCG.Dictionary<string,object?> ArgsMethod_Interceptor_AspectArguments_9 = new()
		{
			["Arg5"] = 1.1d,
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgsMethod().
		/// </summary>
		//
		// Intercepts ArgsMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 251, character: 15)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgsMethod_Interceptor(this AspectGenerator.Tests.UnitTests __this__)
		{
			// Aspects.ArgsAttribute(Arg1 = "1", Arg2 = 2, Arg3 = {1, 2, 3})
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.ArgsAttribute),
				AspectArguments = ArgsMethod_Interceptor_AspectArguments_0,
			};

			{
				// Aspects.ArgsAttribute(Arg3 = {2})
				//
				var __info__1 = new AspectGenerator.InterceptInfo<string>
				{
					MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
					AspectType      = typeof(Aspects.ArgsAttribute),
					AspectArguments = ArgsMethod_Interceptor_AspectArguments_1,
					PreviousInfo    = __info__0
				};

				{
					// Aspects.ArgsAttribute(Arg3 = {})
					//
					var __info__2 = new AspectGenerator.InterceptInfo<string>
					{
						MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
						AspectType      = typeof(Aspects.ArgsAttribute),
						AspectArguments = ArgsMethod_Interceptor_AspectArguments_2,
						PreviousInfo    = __info__1
					};

					{
						// Aspects.ArgsAttribute(Arg1 = "xyz")
						//
						var __info__3 = new AspectGenerator.InterceptInfo<string>
						{
							MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
							AspectType      = typeof(Aspects.ArgsAttribute),
							AspectArguments = ArgsMethod_Interceptor_AspectArguments_3,
							PreviousInfo    = __info__2
						};

						{
							// Aspects.ArgsAttribute(Arg4 = 'w')
							//
							var __info__4 = new AspectGenerator.InterceptInfo<string>
							{
								MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
								AspectType      = typeof(Aspects.ArgsAttribute),
								AspectArguments = ArgsMethod_Interceptor_AspectArguments_4,
								PreviousInfo    = __info__3
							};

							{
								// Aspects.ArgsAttribute(Arg5 = null)
								//
								var __info__5 = new AspectGenerator.InterceptInfo<string>
								{
									MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
									AspectType      = typeof(Aspects.ArgsAttribute),
									AspectArguments = ArgsMethod_Interceptor_AspectArguments_5,
									PreviousInfo    = __info__4
								};

								{
									// Aspects.ArgsAttribute(Arg5 = typeof(int))
									//
									var __info__6 = new AspectGenerator.InterceptInfo<string>
									{
										MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
										AspectType      = typeof(Aspects.ArgsAttribute),
										AspectArguments = ArgsMethod_Interceptor_AspectArguments_6,
										PreviousInfo    = __info__5
									};

									{
										// Aspects.ArgsAttribute(Arg5 = typeof(System.Collections.Generic.List<>))
										//
										var __info__7 = new AspectGenerator.InterceptInfo<string>
										{
											MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
											AspectType      = typeof(Aspects.ArgsAttribute),
											AspectArguments = ArgsMethod_Interceptor_AspectArguments_7,
											PreviousInfo    = __info__6
										};

										{
											// Aspects.ArgsAttribute(Arg5 = typeof(System.Collections.Generic.List<System.DateTime>))
											//
											var __info__8 = new AspectGenerator.InterceptInfo<string>
											{
												MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
												AspectType      = typeof(Aspects.ArgsAttribute),
												AspectArguments = ArgsMethod_Interceptor_AspectArguments_8,
												PreviousInfo    = __info__7
											};

											{
												// Aspects.ArgsAttribute(Arg5 = 1.1)
												//
												var __info__9 = new AspectGenerator.InterceptInfo<string>
												{
													MemberInfo      = ArgsMethod_Interceptor_MemberInfo,
													AspectType      = typeof(Aspects.ArgsAttribute),
													AspectArguments = ArgsMethod_Interceptor_AspectArguments_9,
													PreviousInfo    = __info__8
												};

												__info__9.ReturnValue = __this__.ArgsMethod();

												__info__9.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
												Aspects.ArgsAttribute.OnAfterCall(__info__9);

												__info__8.ReturnValue = __info__9.ReturnValue;
											}

											__info__8.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
											Aspects.ArgsAttribute.OnAfterCall(__info__8);

											__info__7.ReturnValue = __info__8.ReturnValue;
										}

										__info__7.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
										Aspects.ArgsAttribute.OnAfterCall(__info__7);

										__info__6.ReturnValue = __info__7.ReturnValue;
									}

									__info__6.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
									Aspects.ArgsAttribute.OnAfterCall(__info__6);

									__info__5.ReturnValue = __info__6.ReturnValue;
								}

								__info__5.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
								Aspects.ArgsAttribute.OnAfterCall(__info__5);

								__info__4.ReturnValue = __info__5.ReturnValue;
							}

							__info__4.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
							Aspects.ArgsAttribute.OnAfterCall(__info__4);

							__info__3.ReturnValue = __info__4.ReturnValue;
						}

						__info__3.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
						Aspects.ArgsAttribute.OnAfterCall(__info__3);

						__info__2.ReturnValue = __info__3.ReturnValue;
					}

					__info__2.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
					Aspects.ArgsAttribute.OnAfterCall(__info__2);

					__info__1.ReturnValue = __info__2.ReturnValue;
				}

				__info__1.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
				Aspects.ArgsAttribute.OnAfterCall(__info__1);

				__info__0.ReturnValue = __info__1.ReturnValue;
			}

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static bool                           ArgumentsInMethod_Interceptor_Arg_b             = default(bool);
		static int?                           ArgumentsInMethod_Interceptor_Arg__             = default(int?);
		static SR. MemberInfo                 ArgumentsInMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ArgumentsInMethod(default(string), default(int), in ArgumentsInMethod_Interceptor_Arg_b, ref ArgumentsInMethod_Interceptor_Arg__));
		static SCG.Dictionary<string,object?> ArgumentsInMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgumentsInMethod(string, int, in bool, ref int?).
		/// </summary>
		//
		// Intercepts ArgumentsInMethod("_", 1, in b, ref n).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 361, character: 13)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgumentsInMethod_Interceptor(string s, int i, in bool b, ref int? _)
		{
			var __args__ = new object?[] { s, i, b, _ };

			// Aspects.ArgumentsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgumentsInMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.ArgumentsAttribute),
				AspectArguments = ArgumentsInMethod_Interceptor_AspectArguments_0,
				MethodArguments = __args__,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.ArgumentsInMethod(s, i, in b, ref _);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgumentsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static int?                           ArgumentsInMethod_Interceptor_1_Arg__             = default(int?);
		static SR. MemberInfo                 ArgumentsInMethod_Interceptor_1_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ArgumentsInMethod(default(string), default(int), default(bool), ref ArgumentsInMethod_Interceptor_1_Arg__));
		static SCG.Dictionary<string,object?> ArgumentsInMethod_Interceptor_1_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgumentsInMethod(string, int, bool, ref int?).
		/// </summary>
		//
		// Intercepts ArgumentsInMethod("_", 1, b, ref n).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 377, character: 13)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgumentsInMethod_Interceptor_1(string s, int i, bool b, ref int? _)
		{
			var __args__ = new object?[] { s, i, b, _ };

			// Aspects.ArgumentsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgumentsInMethod_Interceptor_1_MemberInfo,
				AspectType      = typeof(Aspects.ArgumentsAttribute),
				AspectArguments = ArgumentsInMethod_Interceptor_1_AspectArguments_0,
				MethodArguments = __args__,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.ArgumentsInMethod(s, i, b, ref _);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgumentsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ArgumentsMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ArgumentsMethod());
		static SCG.Dictionary<string,object?> ArgumentsMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgumentsMethod().
		/// </summary>
		//
		// Intercepts ArgumentsMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 318, character: 12)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgumentsMethod_Interceptor()
		{
			var __args__ = new object?[] { };

			// Aspects.ArgumentsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgumentsMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.ArgumentsAttribute),
				AspectArguments = ArgumentsMethod_Interceptor_AspectArguments_0,
				MethodArguments = __args__,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.ArgumentsMethod();

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgumentsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ArgumentsMethod_Interceptor_2_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ArgumentsMethod(default(string), default(int)));
		static SCG.Dictionary<string,object?> ArgumentsMethod_Interceptor_2_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgumentsMethod(string, int).
		/// </summary>
		//
		// Intercepts ArgumentsMethod("_", 1).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 331, character: 12)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgumentsMethod_Interceptor_2(string s, int i)
		{
			var __args__ = new object?[] { s, i };

			// Aspects.ArgumentsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgumentsMethod_Interceptor_2_MemberInfo,
				AspectType      = typeof(Aspects.ArgumentsAttribute),
				AspectArguments = ArgumentsMethod_Interceptor_2_AspectArguments_0,
				MethodArguments = __args__,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.ArgumentsMethod(s, i);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgumentsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static string                         ArgumentsOutMethod_Interceptor_Arg_s             = default(string);
		static SR. MemberInfo                 ArgumentsOutMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ArgumentsOutMethod(out ArgumentsOutMethod_Interceptor_Arg_s));
		static SCG.Dictionary<string,object?> ArgumentsOutMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgumentsOutMethod(out string).
		/// </summary>
		//
		// Intercepts ArgumentsOutMethod(out _).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 392, character: 13)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgumentsOutMethod_Interceptor(out string s)
		{
			var __args__ = new object?[] { s = default };

			// Aspects.ArgumentsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgumentsOutMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.ArgumentsAttribute),
				AspectArguments = ArgumentsOutMethod_Interceptor_AspectArguments_0,
				MethodArguments = __args__,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.ArgumentsOutMethod(out s);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgumentsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static bool                           ArgumentsRefMethod_Interceptor_Arg_b             = default(bool);
		static SR. MemberInfo                 ArgumentsRefMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ArgumentsRefMethod(default(string), default(int), ref ArgumentsRefMethod_Interceptor_Arg_b));
		static SCG.Dictionary<string,object?> ArgumentsRefMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ArgumentsRefMethod(string, int, ref bool).
		/// </summary>
		//
		// Intercepts ArgumentsRefMethod("_", 1, ref b).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 345, character: 12)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ArgumentsRefMethod_Interceptor(string s, int i, ref bool b)
		{
			var __args__ = new object?[] { s, i, b };

			// Aspects.ArgumentsAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ArgumentsRefMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.ArgumentsAttribute),
				AspectArguments = ArgumentsRefMethod_Interceptor_AspectArguments_0,
				MethodArguments = __args__,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.ArgumentsRefMethod(s, i, ref b);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.ArgumentsAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 EmptyMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.EmptyMethod());
		static SCG.Dictionary<string,object?> EmptyMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.EmptyMethod().
		/// </summary>
		//
		// Intercepts EmptyMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 66, character: 4)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static int EmptyMethod_Interceptor()
		{
			// Aspects.EmptyAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = EmptyMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.EmptyAspectAttribute),
				AspectArguments = EmptyMethod_Interceptor_AspectArguments_0,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.EmptyMethod();

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ExtensionMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.TestCodeExtensions.ExtensionMethod(default(AspectGenerator.Tests.UnitTests), default(int)));
		static SCG.Dictionary<string,object?> ExtensionMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ExtensionMethod<int>(int).
		/// </summary>
		//
		// Intercepts this.ExtensionMethod(1).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 128, character: 19)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ExtensionMethod_Interceptor(this AspectGenerator.Tests.UnitTests __this__, int value)
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ExtensionMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = ExtensionMethod_Interceptor_AspectArguments_0,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.TestCodeExtensions.ExtensionMethod(__this__, value);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ExtensionMethod_Interceptor_3_MemberInfo        = MethodOf(() => AspectGenerator.Tests.TestCodeExtensions.ExtensionMethod(default(AspectGenerator.Tests.TestClassExtension), default(int)));
		static SCG.Dictionary<string,object?> ExtensionMethod_Interceptor_3_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.TestClassExtension.ExtensionMethod<int>(int).
		/// </summary>
		//
		// Intercepts new TestClassExtension().ExtensionMethod(1).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 138, character: 39)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ExtensionMethod_Interceptor_3(this AspectGenerator.Tests.TestClassExtension __this__, int value)
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ExtensionMethod_Interceptor_3_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = ExtensionMethod_Interceptor_3_AspectArguments_0,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.TestCodeExtensions.ExtensionMethod(__this__, value);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ExtensionMethod_Interceptor_4_MemberInfo        = MethodOf(() => AspectGenerator.Tests.TestCodeExtensions.ExtensionMethod(default(AspectGenerator.Tests.TestStructExtension), default(int)));
		static SCG.Dictionary<string,object?> ExtensionMethod_Interceptor_4_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.TestStructExtension.ExtensionMethod<int>(int).
		/// </summary>
		//
		// Intercepts new TestStructExtension().ExtensionMethod(2).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 148, character: 40)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string ExtensionMethod_Interceptor_4(this AspectGenerator.Tests.TestStructExtension __this__, int value)
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = ExtensionMethod_Interceptor_4_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = ExtensionMethod_Interceptor_4_AspectArguments_0,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.TestCodeExtensions.ExtensionMethod(__this__, value);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 FinallyMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.FinallyMethod());
		static SCG.Dictionary<string,object?> FinallyMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.FinallyMethod().
		/// </summary>
		//
		// Intercepts FinallyMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 106, character: 12)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static int FinallyMethod_Interceptor()
		{
			// Aspects.FinallyAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = FinallyMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.FinallyAttribute),
				AspectArguments = FinallyMethod_Interceptor_AspectArguments_0,
			};

			try
			{
				__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.FinallyMethod();
			}
			catch (Exception __ex__)
			{
				__info__0.Exception = __ex__;
				throw;
			}
			finally
			{
				__info__0.InterceptType = AspectGenerator.InterceptType.OnFinally;
				Aspects.FinallyAttribute.OnFinally(__info__0);
			}

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 GenericMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.TestCode.GenericMethod(default(int)));
		static SCG.Dictionary<string,object?> GenericMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		static SCG.Dictionary<string,object?> GenericMethod_Interceptor_AspectArguments_1 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.TestCode.GenericMethod<int>(int).
		/// </summary>
		//
		// Intercepts TestCode.GenericMethod(1).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 39, character: 23)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string GenericMethod_Interceptor(int value)
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = GenericMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = GenericMethod_Interceptor_AspectArguments_0,
			};

			{
				// Aspects.TestAspect2Attribute
				//
				var __info__1 = new AspectGenerator.InterceptInfo<string>
				{
					MemberInfo      = GenericMethod_Interceptor_MemberInfo,
					AspectType      = typeof(Aspects.TestAspect2Attribute),
					AspectArguments = GenericMethod_Interceptor_AspectArguments_1,
					PreviousInfo    = __info__0
				};

				__info__1.InterceptType = AspectGenerator.InterceptType.OnBeforeCall;
				Aspects.TestAspect2Attribute.OnBeforeCall(__info__1);

				if (__info__1.InterceptResult != AspectGenerator.InterceptResult.Return)
				{
					__info__1.ReturnValue = AspectGenerator.Tests.TestCode.GenericMethod(value);

					__info__1.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
					Aspects.TestAspect2Attribute.OnCall(__info__1);
				}

				__info__0.ReturnValue = __info__1.ReturnValue;
			}

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 GenericMethod_Interceptor_5_MemberInfo        = MethodOf(() => AspectGenerator.Tests.TestCode.GenericMethod(default(System.DateTime)));
		static SCG.Dictionary<string,object?> GenericMethod_Interceptor_5_AspectArguments_0 = new()
		{
		};
		static SCG.Dictionary<string,object?> GenericMethod_Interceptor_5_AspectArguments_1 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.TestCode.GenericMethod<System.DateTime>(System.DateTime).
		/// </summary>
		//
		// Intercepts TestCode.GenericMethod(DateTime.Today).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 39, character: 51)]
		//
		// Intercepts TestCode.GenericMethod(now).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 39, character: 92)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string GenericMethod_Interceptor_5(System.DateTime value)
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = GenericMethod_Interceptor_5_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = GenericMethod_Interceptor_5_AspectArguments_0,
			};

			{
				// Aspects.TestAspect2Attribute
				//
				var __info__1 = new AspectGenerator.InterceptInfo<string>
				{
					MemberInfo      = GenericMethod_Interceptor_5_MemberInfo,
					AspectType      = typeof(Aspects.TestAspect2Attribute),
					AspectArguments = GenericMethod_Interceptor_5_AspectArguments_1,
					PreviousInfo    = __info__0
				};

				__info__1.InterceptType = AspectGenerator.InterceptType.OnBeforeCall;
				Aspects.TestAspect2Attribute.OnBeforeCall(__info__1);

				if (__info__1.InterceptResult != AspectGenerator.InterceptResult.Return)
				{
					__info__1.ReturnValue = AspectGenerator.Tests.TestCode.GenericMethod(value);

					__info__1.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
					Aspects.TestAspect2Attribute.OnCall(__info__1);
				}

				__info__0.ReturnValue = __info__1.ReturnValue;
			}

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 IgnoreCatchMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.IgnoreCatchMethod());
		static SCG.Dictionary<string,object?> IgnoreCatchMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.IgnoreCatchMethod().
		/// </summary>
		//
		// Intercepts IgnoreCatchMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 94, character: 4)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static int IgnoreCatchMethod_Interceptor()
		{
			// Aspects.IgnoreCatchAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = IgnoreCatchMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.IgnoreCatchAttribute),
				AspectArguments = IgnoreCatchMethod_Interceptor_AspectArguments_0,
			};

			try
			{
				__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.IgnoreCatchMethod();
			}
			catch (Exception __ex__)
			{
				__info__0.Exception       = __ex__;
				__info__0.InterceptResult = AspectGenerator.InterceptResult.ReThrow;
				__info__0.InterceptType   = AspectGenerator.InterceptType.OnCatch;

				Aspects.IgnoreCatchAttribute.OnCatch(__info__0);

				if (__info__0.InterceptResult == AspectGenerator.InterceptResult.ReThrow)
					throw;
			}

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 InitMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.InitMethod());
		static SCG.Dictionary<string,object?> InitMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.InitMethod().
		/// </summary>
		//
		// Intercepts InitMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 80, character: 4)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static int InitMethod_Interceptor()
		{
			// Aspects.InitAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = InitMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.InitAspectAttribute),
				AspectArguments = InitMethod_Interceptor_AspectArguments_0,
			};

			__info__0.InterceptType = AspectGenerator.InterceptType.OnInit;
			__info__0 = Aspects.InitAspectAttribute.OnInit(__info__0);

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.InitMethod();

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 MemberMethod_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).MemberMethod(default(int)));
		static SCG.Dictionary<string,object?> MemberMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.MemberMethod(int).
		/// </summary>
		//
		// Intercepts MemberMethod(1).
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 120, character: 12)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static int MemberMethod_Interceptor(this AspectGenerator.Tests.UnitTests __this__, int n)
		{
			// Aspects.FinallyAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = MemberMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.FinallyAttribute),
				AspectArguments = MemberMethod_Interceptor_AspectArguments_0,
			};

			try
			{
				__info__0.ReturnValue = __this__.MemberMethod(n);
			}
			catch (Exception __ex__)
			{
				__info__0.Exception = __ex__;
				throw;
			}
			finally
			{
				__info__0.InterceptType = AspectGenerator.InterceptType.OnFinally;
				Aspects.FinallyAttribute.OnFinally(__info__0);
			}

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 OrderedMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.OrderedMethod());
		static SCG.Dictionary<string,object?> OrderedMethod_Interceptor_AspectArguments_0 = new()
		{
			["Order"] = 1,
			["Value"] = "2",
		};
		static SCG.Dictionary<string,object?> OrderedMethod_Interceptor_AspectArguments_1 = new()
		{
			["Order"] = 2,
			["Value"] = "1",
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.OrderedMethod().
		/// </summary>
		//
		// Intercepts OrderedMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 299, character: 13)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string OrderedMethod_Interceptor()
		{
			// Aspects.OrderedAttribute(Order = 1, Value = "2")
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = OrderedMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.OrderedAttribute),
				AspectArguments = OrderedMethod_Interceptor_AspectArguments_0,
			};

			{
				// Aspects.OrderedAttribute(Order = 2, Value = "1")
				//
				var __info__1 = new AspectGenerator.InterceptInfo<string>
				{
					MemberInfo      = OrderedMethod_Interceptor_MemberInfo,
					AspectType      = typeof(Aspects.OrderedAttribute),
					AspectArguments = OrderedMethod_Interceptor_AspectArguments_1,
					PreviousInfo    = __info__0
				};

				__info__1.ReturnValue = AspectGenerator.Tests.UnitTests.OrderedMethod();

				__info__1.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
				Aspects.OrderedAttribute.OnAfterCall(__info__1);

				__info__0.ReturnValue = __info__1.ReturnValue;
			}

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.OrderedAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 OrderedMethod2_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.OrderedMethod2());
		static SCG.Dictionary<string,object?> OrderedMethod2_Interceptor_AspectArguments_0 = new()
		{
			["Order"] = 2,
			["Value"] = "2",
		};
		static SCG.Dictionary<string,object?> OrderedMethod2_Interceptor_AspectArguments_1 = new()
		{
			["Order"] = 3,
			["Value"] = "3",
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.OrderedMethod2().
		/// </summary>
		//
		// Intercepts OrderedMethod2().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 303, character: 13)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static int OrderedMethod2_Interceptor()
		{
			// Aspects.OrderedAttribute(Order = 2, Value = "2")
			//
			var __info__0 = new AspectGenerator.InterceptInfo<int>
			{
				MemberInfo      = OrderedMethod2_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.OrderedAttribute),
				AspectArguments = OrderedMethod2_Interceptor_AspectArguments_0,
			};

			{
				// Aspects.OrderedAttribute(Order = 3, Value = "3")
				//
				var __info__1 = new AspectGenerator.InterceptInfo<int>
				{
					MemberInfo      = OrderedMethod2_Interceptor_MemberInfo,
					AspectType      = typeof(Aspects.OrderedAttribute),
					AspectArguments = OrderedMethod2_Interceptor_AspectArguments_1,
					PreviousInfo    = __info__0
				};

				__info__1.ReturnValue = AspectGenerator.Tests.UnitTests.OrderedMethod2();

				__info__1.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
				Aspects.OrderedAttribute.OnAfterCall(__info__1);

				__info__0.ReturnValue = __info__1.ReturnValue;
			}

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.OrderedAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 ReturnVoidMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.ReturnVoidMethod());
		static SCG.Dictionary<string,object?> ReturnVoidMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		static SCG.Dictionary<string,object?> ReturnVoidMethod_Interceptor_AspectArguments_1 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.ReturnVoidMethod().
		/// </summary>
		//
		// Intercepts ReturnVoidMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 54, character: 4)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static void ReturnVoidMethod_Interceptor()
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<AspectGenerator.Void>
			{
				MemberInfo      = ReturnVoidMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = ReturnVoidMethod_Interceptor_AspectArguments_0,
			};

			{
				// Aspects.TestAspect2Attribute
				//
				var __info__1 = new AspectGenerator.InterceptInfo<AspectGenerator.Void>
				{
					MemberInfo      = ReturnVoidMethod_Interceptor_MemberInfo,
					AspectType      = typeof(Aspects.TestAspect2Attribute),
					AspectArguments = ReturnVoidMethod_Interceptor_AspectArguments_1,
					PreviousInfo    = __info__0
				};

				__info__1.InterceptType = AspectGenerator.InterceptType.OnBeforeCall;
				Aspects.TestAspect2Attribute.OnBeforeCall(__info__1);

				if (__info__1.InterceptResult != AspectGenerator.InterceptResult.Return)
				{
					AspectGenerator.Tests.UnitTests.ReturnVoidMethod();

					__info__1.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
					Aspects.TestAspect2Attribute.OnCall(__info__1);
				}

				__info__0.ReturnValue = __info__1.ReturnValue;
			}

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);
		}

		static SR. MemberInfo                 StaticMethod_Interceptor_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.StaticMethod());
		static SCG.Dictionary<string,object?> StaticMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.StaticMethod().
		/// </summary>
		//
		// Intercepts StaticMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 27, character: 14)]
		//
		// Intercepts StaticMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 27, character: 38)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string StaticMethod_Interceptor()
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = StaticMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = StaticMethod_Interceptor_AspectArguments_0,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.StaticMethod();

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 StaticMethod_Interceptor_6_MemberInfo        = MethodOf(() => AspectGenerator.Tests.UnitTests.StaticMethod(default(string)));
		static SCG.Dictionary<string,object?> StaticMethod_Interceptor_6_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.StaticMethod(string).
		/// </summary>
		//
		// Intercepts StaticMethod("John").
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 28, character: 14)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string StaticMethod_Interceptor_6(string name)
		{
			// Aspects.TestAspectAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = StaticMethod_Interceptor_6_MemberInfo,
				AspectType      = typeof(Aspects.TestAspectAttribute),
				AspectArguments = StaticMethod_Interceptor_6_AspectArguments_0,
			};

			__info__0.ReturnValue = AspectGenerator.Tests.UnitTests.StaticMethod(name);

			__info__0.InterceptType = AspectGenerator.InterceptType.OnAfterCall;
			Aspects.TestAspectAttribute.OnAfterCall(__info__0);

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 UsingMethod_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).UsingMethod());
		static SCG.Dictionary<string,object?> UsingMethod_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.UsingMethod().
		/// </summary>
		//
		// Intercepts UsingMethod().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 267, character: 15)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static string UsingMethod_Interceptor(this AspectGenerator.Tests.UnitTests __this__)
		{
			// Aspects.UsingAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = UsingMethod_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.UsingAttribute),
				AspectArguments = UsingMethod_Interceptor_AspectArguments_0,
			};

			using (Aspects.UsingAttribute.OnUsing(__info__0))
			{
				__info__0.ReturnValue = __this__.UsingMethod();
			}

			return __info__0.ReturnValue;
		}

		static SR. MemberInfo                 UsingMethodAsync_Interceptor_MemberInfo        = MethodOf(() => default(AspectGenerator.Tests.UnitTests).UsingMethodAsync());
		static SCG.Dictionary<string,object?> UsingMethodAsync_Interceptor_AspectArguments_0 = new()
		{
		};
		//
		/// <summary>
		/// Intercepts AspectGenerator.Tests.UnitTests.UsingMethodAsync().
		/// </summary>
		//
		// Intercepts UsingMethodAsync().
		[System.Runtime.CompilerServices.InterceptsLocation(@"P:\AspectGenerator\Tests\UnitTests.cs", line: 279, character: 21)]
		//
		[System.Runtime.CompilerServices.CompilerGenerated]
		//[System.Diagnostics.DebuggerStepThrough]
		public static async System.Threading.Tasks.Task<string> UsingMethodAsync_Interceptor(this AspectGenerator.Tests.UnitTests __this__)
		{
			// Aspects.UsingAttribute
			//
			var __info__0 = new AspectGenerator.InterceptInfo<string>
			{
				MemberInfo      = UsingMethodAsync_Interceptor_MemberInfo,
				AspectType      = typeof(Aspects.UsingAttribute),
				AspectArguments = UsingMethodAsync_Interceptor_AspectArguments_0,
			};

			await using (Aspects.UsingAttribute.OnUsingAsync(__info__0))
			{
				__info__0.ReturnValue = await __this__.UsingMethodAsync();
			}

			return __info__0.ReturnValue;
		}
	}
}
